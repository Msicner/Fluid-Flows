import matplotlib.pyplot as plt

classical = [5.2135072, 4.416937, 4.11055973, 4.02701406, 4.02701406, 4.11055973, 4.416937, 5.2135072,
             5.59044781, 4.73683069, 4.25931266, 4.08160411, 4.08160411, 4.25931266, 4.73683069, 5.59044781,
             5.88633147, 4.99846879, 4.41821408, 4.15822297, 4.15822297, 4.41821408, 4.99846879, 5.88633147,
             6.13263151, 5.22289214, 4.57700736, 4.25116823, 4.25116823, 4.57700736, 5.22289214, 6.13263151,
             6.3467709, 5.42236349, 4.73247459, 4.35592774, 4.35592774, 4.73247459, 5.42236349, 6.3467709,
             6.53910343, 5.6045139, 4.88407868, 4.46919939, 4.46919939, 4.88407868, 5.6045139, 6.53910343,
             6.71618034, 5.77435448, 5.03221022, 4.58862303, 4.58862303, 5.03221022, 5.77435448, 6.71618034,
             6.88235939, 5.93531107, 5.17749946, 4.71251631, 4.71251631, 5.17749946, 5.93531107, 6.88235939]


hhl = [5.213507199437722, 4.3769695510046285, 3.970874878092768, 3.8266472341869235, 3.826647234186881, 3.970874878092728, 4.376969551004558, 5.213507199437629,
       5.590447810988535, 4.697163869032712, 4.123827115350782, 3.8934525717685333, 3.893452571768482, 4.123827115350736, 4.697163869032647, 5.59044781098844,
       5.886331466011475, 4.958353477019167, 4.283517029107021, 3.9782682660906583, 3.978268266090606, 4.283517029106977, 4.958353477019099, 5.886331466011383,
       6.132631509356425, 5.181890843377644, 4.4411366604759825, 4.076068002649962, 4.076068002649903, 4.4411366604759275, 5.1818908433775706, 6.132631509356321,
       6.346770896068941, 5.380188697959091, 4.594157059612466, 4.182856318294, 4.182856318293944, 4.594157059612421, 5.380188697959021, 6.346770896068838,
       6.539103425301006, 5.560962866812703, 4.742426907888659, 4.295832857277097, 4.295832857277039, 4.742426907888612, 5.560962866812636, 6.5391034253009055,
       6.716180343228221, 5.729278783947529, 4.8865819076937, 4.413105281013697, 4.41310528101362, 4.886581907693645, 5.729278783947432, 6.7161803432280855,
       6.882359385154708, 5.888600060242251, 5.027420972029023, 4.533397926640865, 4.533397926640802, 5.027420972028965, 5.88860006024217, 6.88235938515459]

hhl_small = [7.22952638e-01, 5.54309693e-01, 5.54309693e-01, 7.22952638e-01,
             7.34404332e-01, 5.71692064e-01, 5.71692064e-01, 7.34404332e-01,
             7.43433680e-01, 5.85991382e-01, 5.85991382e-01, 7.43433680e-01,
             7.50794387e-01, 5.98146026e-01, 5.98146026e-01, 7.50794387e-01]

hhl_initial = [5.16020788e-01, 4.33222242e-01, 3.93027938e-01, 3.78752622e-01, 3.78752622e-01, 3.93027938e-01, 4.33222242e-01, 5.16020788e-01,
               5.29947113e-01, 4.45268164e-01, 3.90918644e-01, 3.69080264e-01, 3.69080264e-01, 3.90918644e-01, 4.45268164e-01, 5.29947113e-01,
               5.36462745e-01, 4.51889591e-01, 3.90387004e-01, 3.62567539e-01, 3.62567539e-01, 3.90387004e-01, 4.51889591e-01, 5.36462745e-01,
               5.39219463e-01, 4.55624375e-01, 3.90492617e-01, 3.58393489e-01, 3.58393489e-01, 3.90492617e-01, 4.55624375e-01, 5.39219463e-01,
               5.39940056e-01, 4.57709824e-01, 3.90839603e-01, 3.55848937e-01, 3.55848937e-01, 3.90839603e-01, 4.57709824e-01, 5.39940056e-01,
               5.39498169e-01, 4.58798262e-01, 3.91266274e-01, 3.54420753e-01, 3.54420753e-01, 3.91266274e-01, 4.58798262e-01, 5.39498169e-01,
               5.38367546e-01, 4.59257733e-01, 3.91707336e-01, 3.53753553e-01, 3.53753553e-01, 3.91707336e-01, 4.59257733e-01, 5.38367546e-01,
               5.36821262e-01, 4.59308434e-01, 3.92136812e-01, 3.53603213e-01, 3.53603213e-01, 3.92136812e-01, 4.59308434e-01, 5.36821262e-01]

local_coeff_list = []
local_coeff_list_vqls = []
local_coeff_list_hhl_small = []

classical_small = [5.77108013, 4.30749135, 4.30749135, 5.77108013,
                   6.10305071, 4.59087678, 4.59087678, 6.10305071,
                   6.40235754, 4.85858361, 4.85858361, 6.40235754,
                   6.68041972, 5.11609301, 5.11609301, 6.68041972]

vqls = [0.56358021, 0.42705661, 0.42705661, 0.56358021,
        0.56023787, 0.43143195, 0.43143195, 0.56023787,
        0.55745009, 0.43502804, 0.43502804, 0.55745009,
        0.55504071, 0.43809794, 0.43809794, 0.55504071]


hhl_local = []
for j in range(8):
    coeff = []
    for i in range(8):
        coeff.append(classical[j*8 + i]/hhl_initial[j*8 + i])
    local_coeff_list.append(sum(coeff)/len(coeff))
    for i in range(8):
        hhl_local.append(hhl_initial[j*8 + i]*local_coeff_list[j])

vqls_local = []
for j in range(4):
    coeff = []
    for i in range(4):
        coeff.append(classical_small[j*4 + i]/vqls[j*4 + i])
    local_coeff_list_vqls.append(sum(coeff)/len(coeff))
    for i in range(4):
        vqls_local.append(vqls[j*4 + i]*local_coeff_list_vqls[j])

hhl_small_local = []
for j in range(4):
    coeff = []
    for i in range(4):
        coeff.append(classical_small[j*4 + i]/hhl_small[j*4 + i])
    local_coeff_list_hhl_small.append(sum(coeff)/len(coeff))
    for i in range(4):
        hhl_small_local.append(hhl_small[j*4 + i]*local_coeff_list_hhl_small[j])

accuracy_list = []
for data in range(len(classical_small)):
    accuracy_list.append(abs(1 - hhl_small_local[data]/classical_small[data]))
accuracy = sum(accuracy_list)/len(accuracy_list)
print(f"Accuracy:", accuracy, min(accuracy_list), max(accuracy_list))

plt.scatter(classical, hhl_local)
plt.title(f'Solution Comparison')  # Set the plot title
plt.xlabel('LU decomposition')
plt.ylabel('VQLS')
plt.plot([x for x in range(4,8)], [x for x in range(4,8)], "--")
plt.show()